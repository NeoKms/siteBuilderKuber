apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: site-builder-__SITE_ID__-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: __SITE_DOMAIN__
      http:
        paths:
          - backend:
              serviceName: site-builder-__SITE_ID__
              servicePort: 80
            path: /
---
apiVersion: v1
kind: Service
metadata:
  name: site-builder-__SITE_ID__
  namespace: default
  labels:
    app: site-builder-__SITE_ID__
spec:
  ports:
    - port: 80
  selector:
    app: site-builder-__SITE_ID__
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: site-builder-__SITE_ID__
  namespace: default
spec:
  selector:
    matchLabels:
      app: site-builder-__SITE_ID__
  replicas: 1
  strategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: site-builder-__SITE_ID__
        commitHash: sfds
    spec:
      containers:
        - image: upachko/site_builder_builder:latest
          imagePullPolicy: Always
          name: site-builder-__SITE_ID__
          env:
            - name: PRODUCTION
              valueFrom:
                configMapKeyRef:
                  name: server-type
                  key: PRODUCTION
            - name: COOKIE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: server-type
                  key: COOKIE_DOMAIN
            - name: KUBE_IP
              valueFrom:
                configMapKeyRef:
                  name: server-type
                  key: KUBE_IP
            #props
            - name: SITE_ID
              value: "__SITE_ID__"
            - name: API_HOST_NAME
              valueFrom:
                configMapKeyRef:
                  name: api-default
                  key: URL
            - name: APP_PATH
              value: "/var/www/"
            - name: WWW_PATH
              value: "/var/www/html/"
            - name: API_PASS
              valueFrom:
                configMapKeyRef:
                  name: builder-default
                  key: PASS
            - name: API_LOGIN
              valueFrom:
                configMapKeyRef:
                  name: builder-default
                  key: LOGIN
            - name: AUTH_KEY
              valueFrom:
                configMapKeyRef:
                  name: builder-default
                  key: AUTH_KEY
            #rabbit
            - name: RABBIT_USER
              valueFrom:
                configMapKeyRef:
                  name: builder-default
                  key: RABBIT_USER
            - name: RABBIT_HOST
              valueFrom:
                configMapKeyRef:
                  name: rabbit-default
                  key: HOST
            - name: PREVIEW_URL
              valueFrom:
                configMapKeyRef:
                  name: builder-default
                  key: PREVIEW_URL
          ports:
            - containerPort: 80
              name: http
          lifecycle:
            postStart:
              exec:
                command: ["sh", "/var/www/build.sh"]
