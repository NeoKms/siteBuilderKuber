apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: site-builder-api-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: api.build.lan
      http:
        paths:
          - backend:
              serviceName: site-builder-api
              servicePort: 3001
            path: /
---
apiVersion: v1
kind: Service
metadata:
  name: site-builder-api
  namespace: default
  labels:
    app: site-builder-api
spec:
  ports:
    - port: 3001
  clusterIP: None
  selector:
    app: site-builder-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: site-builder-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: site-builder-api
  replicas: 1
  strategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: site-builder-api
        commitHash: ggg
    spec:
      containers:
        - image: upachko/site_builder_api:latest
          imagePullPolicy: Always
          name: site-builder-api
          env:
            - name: PRODUCTION
              valueFrom:
                configMapKeyRef:
                  name: server-type
                  key: PRODUCTION
            - name: COOKIE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: server-type
                  key: COOKIE_DOMAIN
            #db
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: dbase-default
                  key: HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: dbase-default
                  key: NAME
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: dbase-default
                  key: PASSWORD
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: dbase-default
                  key: PORT
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: dbase-default
                  key: USER
            #main
            - name: SENTRY_KEY
              valueFrom:
                configMapKeyRef:
                  name: api-default
                  key: SENTRY_KEY
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: api-default
                  key: PORT
            - name: AUTH_LOGIN
              valueFrom:
                configMapKeyRef:
                  name: api-default
                  key: LOGIN
            - name: AUTH_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: api-default
                  key: PASSWORD
            #wss
            - name: WEBSOCKET_HOST
              valueFrom:
                configMapKeyRef:
                  name: wsserver-default
                  key: HOST
            #rabbit
            - name: RABBIT_USER
              valueFrom:
                configMapKeyRef:
                  name: api-default
                  key: RABBIT_USER
            - name: RABBIT_HOST
              valueFrom:
                configMapKeyRef:
                  name: rabbit-default
                  key: HOST
            #redis
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-default
                  key: HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-default
                  key: PORT
          ports:
            - containerPort: 3001
              name: http
          lifecycle:
            postStart:
              exec:
                command: ["sh", "/var/siteBuilderAPI/startProcess.sh", "app"]
